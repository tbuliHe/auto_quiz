name: Deploy to Production

on:
  push:
    branches:
      - master
  workflow_dispatch:  # 允许手动触发

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置 Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 登录 Docker Hub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 构建并推送后端 Docker 镜像
      - name: Build and push backend Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/auto-quiz-backend:latest
          build-args: |
            API_KEY=${{ secrets.API_KEY }}
            API_URL=${{ secrets.API_URL }}
            MODEL=${{ secrets.MODEL }}
            ENVIRONMENT=production

      # 配置前端环境变量
      - name: Create frontend env file
        run: |
          echo "REACT_APP_API_URL=${{ secrets.PRODUCTION_API_URL }}" > frontend/.env

      # 设置 Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      # 安装并构建前端
      - name: Install and build frontend
        run: |
          cd frontend
          npm ci
          npm run build

      # 构建并推送前端 Docker 镜像
      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./Dockerfile.frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/auto-quiz-frontend:latest

      # 使用 SSH 部署到服务器
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/auto_quiz
            docker-compose pull
            docker-compose down
            docker-compose up -d